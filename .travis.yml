sudo: required
services:
- docker
env:
  global:
  - HKEYDIR=/tmp/dnscrypt-wrapper/keys
  - CKEYDIR=/opt/dnscrypt-wrapper/etc/keys
install:
- docker build -t dnscryptio/dnscrypt-wrapper .
- rm -rf $HKEYDIR
- mkdir -p $HKEYDIR
script:
- docker run -d --name bind dnscryptio/bind
- BINDIP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' bind)
- echo $BINDIP
- docker run --interactive --tty --rm dnscryptio/dnscrypt-wrapper --version
- stat -t $HKEYDIR/public.key || stat -t $HKEYDIR/secret.key || echo Provider key pair not present
- docker run --interactive --tty --rm --volume $HKEYDIR:$CKEYDIR -w $CKEYDIR dnscryptio/dnscrypt-wrapper
  --gen-provider-keypair | tee /tmp/gen-provider-keypair.log
- 'PUBLIC_KEYPAIR_FINGERPRINT=$(egrep ''Public key fingerprint: '' /tmp/gen-provider-keypair.log
  | sed ''s/Public key fingerprint: //''); echo $PUBLIC_KEYPAIR_FINGERPRINT | tee
  $HKEYDIR/fingerprint; [ ! -z "$PUBLIC_KEYPAIR_FINGERPRINT" ]'
- stat -t $HKEYDIR/public.key && stat -t $HKEYDIR/secret.key && echo Provider keypair found
- docker run --interactive --tty --rm --volume $HKEYDIR:$CKEYDIR -w $CKEYDIR dnscryptio/dnscrypt-wrapper
  --gen-crypt-keypair
- stat -t $HKEYDIR/crypt_secret.key
- docker run --interactive --tty --rm --volume $HKEYDIR:$CKEYDIR -w $CKEYDIR dnscryptio/dnscrypt-wrapper
  --gen-cert-file
- stat -t $HKEYDIR/dnscrypt.cert
- ls -lah $HKEYDIR
- docker run --volume=$HKEYDIR:$CKEYDIR -w $CKEYDIR --expose=4443 --name=wrapper --detach
  dnscryptio/dnscrypt-wrapper --listen-address=0.0.0.0:4443 --resolver-address=$BINDIP:53
  --provider-name=2.dnscrypt-cert.test.dnscrypt.io --provider-cert-file=$CKEYDIR/dnscrypt.cert
  --crypt-secretkey-file=$CKEYDIR/crypt_secret.key
- sleep 10; docker ps | grep dnscrypt-wrapper
- docker logs --details -t wrapper
- WRAPPERIP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' wrapper)
- echo $WRAPPERIP
- docker run --detach --name=proxy -e RESOLVER_ADDR=$WRAPPERIP:4443 -e PROVIDER_NAME=2.dnscrypt-cert.test.dnscrypt.io
  -e PROVIDER_KEY=$PUBLIC_KEYPAIR_FINGERPRINT -e LOGLEVEL=7 -p 127.0.0.1:53:53/udp
  dnscryptio/dnscrypt-proxy
- docker logs -t --details proxy
- dig @127.0.0.1 www.google.com
after_success:
- export REPO=dnscryptio/dnscrypt-wrapper
- if [ "$TRAVIS_BRANCH" == "master" ]; then docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
  docker tag $REPO $REPO:0.2.2; docker push $REPO; fi
notifications:
  slack:
    secure: Ux1jybA6Q65U0U272Xw3WybadeVB0ZAi9eS7K8UTqckN061mN486n7RHsheJ5sIp0v/CACIAywWeTKVeNJOw3J3i+UFhhrzt8UNYyF+YVYmbnIEUkKWlJ/biA9b2a4SEiUN1/6Jq9WBJ8kav3LZ4MUJRDI91cOSSCS1DKsurhLcOcjI4HNTL96P0da4LwrnZRnvzg2ltLATJR/+LVyM/kLGKke3DxWCeGOydOG9Tqho8poeaKH2DT5tdc0gr5NrAzIN0wb6mzrGPhXo++4bjwwPcg+5bwTzn42PHoK8Hai6tBOvLkmNV49WGhn7LhNI3eaAPmog9vWzn4ACyyDVpJN29iJjFkzNLU44AcJKgd1hr3pbTwrVal8yINwmkveStQInS665GZ5pSuG/WxGvOdVG9SBypUwVfse98RGMvqFx17hBq/ftCVkmG56XRLFuFXOpf0f7jZYElJOUIU9I8ZVqJ1on7uZx2K1lfj1U1MjoavQKGivTPHKPLv9dfEiv37w/PTH5+Rfk5jk6P7+OwTfwJRx2s36dDstydCyri6LD+paBQJa3hxN58wDOLOZ+gWNmcU9on3Oh3pVV+3dGhogGdlm/CW1v42qwEs2ohYjDMD6Ghy92MeFBdx1ihvpZqXq9mmEq7ygHwwbNDvxiRKd5jp7q48xx3eOFaVaDEcXY=
